{"version":3,"sources":["../../src/models/events.test.js"],"names":["describe","it","done","event","Event","validate","err","errors","end","to","exist","start","title","details"],"mappings":";;AAAA;;AACA;;;;;;AAGAA,SAAS,OAAT,EAAkB,YAAW;AACzBC,OAAG,mCAAH,EAAwC,UAASC,IAAT,EAAe;AACnD,YAAMC,QAAQ,IAAIC,gBAAJ,EAAd;AACAD,cAAME,QAAN,CAAe,UAASC,GAAT,EAAc;AACzB,8BAAOA,IAAIC,MAAJ,CAAWC,GAAlB,EAAuBC,EAAvB,CAA0BC,KAA1B;AACAR;AACH,SAHD;AAIH,KAND;;AAQAD,OAAG,qCAAH,EAA0C,UAASC,IAAT,EAAe;AACrD,YAAMC,QAAQ,IAAIC,gBAAJ,EAAd;AACAD,cAAME,QAAN,CAAe,UAASC,GAAT,EAAc;AACzB,8BAAOA,IAAIC,MAAJ,CAAWI,KAAlB,EAAyBF,EAAzB,CAA4BC,KAA5B;AACAR;AACH,SAHD;AAIH,KAND;;AAQAD,OAAG,qCAAH,EAA0C,UAASC,IAAT,EAAe;AACrD,YAAMC,QAAQ,IAAIC,gBAAJ,EAAd;AACAD,cAAME,QAAN,CAAe,UAASC,GAAT,EAAc;AACzB,8BAAOA,IAAIC,MAAJ,CAAWK,KAAlB,EAAyBH,EAAzB,CAA4BC,KAA5B;AACAR;AACH,SAHD;AAIH,KAND;;AAQAD,OAAG,uCAAH,EAA4C,UAASC,IAAT,EAAe;AACvD,YAAMC,QAAQ,IAAIC,gBAAJ,EAAd;AACAD,cAAME,QAAN,CAAe,UAASC,GAAT,EAAc;AACzB,8BAAOA,IAAIC,MAAJ,CAAWM,OAAlB,EAA2BJ,EAA3B,CAA8BC,KAA9B;AACAR;AACH,SAHD;AAIH,KAND;;AAQAD,OAAG,gDAAH,EAAqD,UAASC,IAAT,EAAe;AAChE,YAAMC,QAAQ,IAAIC,gBAAJ,EAAd;AACAD,cAAME,QAAN,CAAe,UAASC,GAAT,EAAc;AACzB,8BAAOA,IAAIC,MAAJ,CAAW,kBAAX,CAAP,EAAuCE,EAAvC,CAA0CC,KAA1C;AACAR;AACH,SAHD;AAIH,KAND;;AAQAD,OAAG,6DAAH,EAAkE,UAASC,IAAT,EAAe;AAC7E,YAAMC,QAAQ,IAAIC,gBAAJ,EAAd;AACAD,cAAME,QAAN,CAAe,UAASC,GAAT,EAAc;AACzB,8BAAOA,IAAIC,MAAJ,CAAW,qBAAX,CAAP,EAA0CE,EAA1C,CAA6CC,KAA7C;AACA,8BAAOJ,IAAIC,MAAJ,CAAW,qBAAX,CAAP,EAA0CE,EAA1C,CAA6CC,KAA7C;AACAR;AACH,SAJD;AAKH,KAPD;AAQH,CAjDD","file":"events.test.js","sourcesContent":["import { expect } from 'chai';\nimport Event from '../models/events';\n\n\ndescribe('event', function() {\n    it('should be invalid if end is empty', function(done) {\n        const event = new Event();\n        event.validate(function(err) {\n            expect(err.errors.end).to.exist;\n            done();\n        });\n    });\n\n    it('should be invalid if start is empty', function(done) {\n        const event = new Event();\n        event.validate(function(err) {\n            expect(err.errors.start).to.exist;\n            done();\n        });\n    });\n\n    it('should be invalid if title is empty', function(done) {\n        const event = new Event();\n        event.validate(function(err) {\n            expect(err.errors.title).to.exist;\n            done();\n        });\n    });\n\n    it('should be invalid if details is empty', function(done) {\n        const event = new Event();\n        event.validate(function(err) {\n            expect(err.errors.details).to.exist;\n            done();\n        });\n    });\n\n    it('should be invalid if location.address is empty', function(done) {\n        const event = new Event();\n        event.validate(function(err) {\n            expect(err.errors['location.address']).to.exist;\n            done();\n        });\n    });\n\n    it('should be invalid if location.lat and location.lng is empty', function(done) {\n        const event = new Event();\n        event.validate(function(err) {\n            expect(err.errors['location.latLng.lat']).to.exist;\n            expect(err.errors['location.latLng.lng']).to.exist;\n            done();\n        });\n    });\n});"]}